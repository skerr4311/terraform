{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logicApp": {
            "type": "string",
            "defaultValue": ""
        },
        "environment": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "variables": {
        "logicApp": {
            "name": "[parameters('logicApp')]",
            "trigger": "manual"
        },
        "resourceId": "[resourceId('Microsoft.Logic/workflows/triggers', variables('logicApp').name, variables('logicApp').trigger)]",
        "apiVersion": "[providers('Microsoft.Logic', 'workflows').apiVersions[0]]"
    },
    "resources": [{
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('logicApp')]",
            "location": "westus2",
            "tags": {
                    "BILLINGCODE": "",
                    "CONTACTS": "",
                    "COUNTRY": "",
                    "CS": "",
                    "ENVIRONMENT": "[parameters('environment')]",
                    "FUNCTION": "",
                    "displayName": ""
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "triggers": {
                        "manual": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "schema": {}
                            }
                        }
                    },
                    "actions": {
                        "Logic_App_Name": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "logicappName",
                                        "type": "string",
                                        "value": "[parameters('logicApp')]"
                                    }
                                ]
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Logic_App_Name": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": {
                                    "message": "the logic app @{variables('logicappName')} has not been set up yet. Please run the release pipeline if you need this logic app"
                                },
                                "statusCode": 200
                            }
                        }
                    }
                }
            }
        }
    ],
    "outputs": {
        "endpointUrl": {
            "type": "string",
            "value": "[listCallbackUrl(variables('resourceId'), variables('apiVersion')).value]"
        },
        "path": {
            "type": "string",
            "value": "[listCallbackUrl(variables('resourceId'), variables('apiVersion')).basePath]"
        },
        "querystring": {
            "type": "string",
            "value": "[concat('api-version=', variables('apiVersion'), '&sp=', uriComponent(listCallbackUrl(variables('resourceId'), variables('apiVersion')).queries.sp), '&sv=', listCallbackUrl(variables('resourceId'), variables('apiVersion')).queries.sv, '&sig=', listCallbackUrl(variables('resourceId'), variables('apiVersion')).queries.sig)]"
        },
        "sasToken": {
            "type": "string",
            "value": "[concat('sp=', uriComponent(listCallbackUrl(variables('resourceId'), variables('apiVersion')).queries.sp), '&sv=', listCallbackUrl(variables('resourceId'), variables('apiVersion')).queries.sv, '&sig=', listCallbackUrl(variables('resourceId'), variables('apiVersion')).queries.sig)]"
        }
    }
}